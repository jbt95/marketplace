services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  broker:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  dynamodb:
    image: amazon/dynamodb-local:1.20.0
    restart: always
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath ./data
    volumes:
      - ./docker/dynamodb:/home/dynamodblocal/data
    ports:
      - "8000:8000"
    networks:
      - app-network
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:4.2.3
    ports:
      - "8002:8001"
    environment:
      DYNAMO_ENDPOINT: "http://dynamodb:8000"
      AWS_REGION: "eu-central-1"
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    depends_on:
      - dynamodb
    networks:
      - app-network
  orders-api:
    build:
      context: ./apps/orders
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - broker
      - dynamodb
    networks:
      - app-network
    develop:
      watch:
        - action: rebuild
          path: ./apps/orders
  invoices-api:
    build:
      context: ./apps/invoices
      dockerfile: Dockerfile
    ports:
      - 4200:4200
    depends_on:
      - broker
      - dynamodb
    networks:
      - app-network
    develop:
      watch:
        - action: rebuild
          path: ./apps/invoices

networks:
  app-network:
    driver: bridge
