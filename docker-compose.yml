services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./docker/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - app-network
  dynamodb:
    container_name: dynamodb
    image: amazon/dynamodb-local:1.20.0
    restart: always
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath ./data
    volumes:
      - ./docker/dynamodb:/home/dynamodblocal/data
    ports:
      - "8000:8000"
    networks:
      - app-network
  dynamodb-admin:
    container_name: dynamodb-admin
    image: aaronshaf/dynamodb-admin:4.2.3
    ports:
      - "8002:8001"
    environment:
      DYNAMO_ENDPOINT: "http://dynamodb:8000"
      AWS_REGION: "eu-central-1"
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    depends_on:
      - dynamodb
    networks:
      - app-network
  orders-api:
    container_name: orders-api
    build:
      context: ./apps/orders
      dockerfile: Dockerfile
      args:
        service: orders
        port: 3000
    ports:
      - 3000:3000
    depends_on:
      - rabbitmq
      - dynamodb
    networks:
      - app-network
    develop:
      watch:
        - action: rebuild
          path: ./apps/orders
  invoices-api:
    container_name: invoices-api
    build:
      context: ./apps/invoices
      dockerfile: Dockerfile
      args:
        service: invoices
        port: 4200
    ports:
      - 4200:4200
    depends_on:
      - rabbitmq
      - dynamodb
    networks:
      - app-network
    develop:
      watch:
        - action: rebuild
          path: ./apps/invoices

networks:
  app-network:
    driver: bridge
